# single order functions
createOrder:
  handler: lambdas/endpoints/orders.createOrder
  events:
    - httpApi:
        path: /create-order
        method: POST

getOrder:
  handler: lambdas/endpoints/orders.getOrder
  events:
    - httpApi:
        path: /get-order/{id}
        method: GET

getOrderByRef:
  handler: lambdas/endpoints/orders.getOrderByRef
  events:
    - httpApi:
        path: /get-order-by-ref/{reference}
        method: GET

updateOrder:
  handler: lambdas/endpoints/orders.updateOrder
  events:
    - httpApi:
        path: /update-order
        method: PUT

updateOrderStatus:
  handler: lambdas/endpoints/orders.updateOrderStatus
  events:
    - httpApi:
        path: /update-order-status
        method: POST

deleteOrder:
  handler: lambdas/endpoints/orders.deleteOrder
  events:
    - httpApi:
        path: /delete-order
        method: DELETE

# multiple order functions
getAllOrders:
  handler: lambdas/endpoints/orders.getAllOrders
  events:
    - httpApi:
        path: /get-all-orders
        method: GET

getActiveOrders:
  handler: lambdas/endpoints/orders.getActiveOrders
  events:
    - httpApi:
        path: /get-active-orders
        method: GET

getCustomerOrders:
  handler: lambdas/endpoints/orders.getCustomerOrders
  events:
    - httpApi:
        path: /get-customer-orders/{id}
        method: GET

getContactOrders:
  handler: lambdas/endpoints/orders.getContactOrders
  events:
    - httpApi:
        path: /get-contact-orders/{contactType}/{contact}
        method: GET

# user functions
createUser:
  handler: lambdas/endpoints/users.createUser
  events:
    - httpApi:
        path: /create-user
        method: POST

resetPassword:
  handler: lambdas/endpoints/users.resetPassword
  events:
    - httpApi:
        path: /reset-password
        method: POST

setNewPassword:
  handler: lambdas/endpoints/users.setNewPassword
  events:
    - httpApi:
        path: /set-new-password
        method: POST

changeUserRole:
  handler: lambdas/endpoints/users.changeUserRole
  events:
    - httpApi:
        path: /update-user-role
        method: POST

signIn:
  handler: lambdas/endpoints/users.signIn
  events:
    - httpApi:
        path: /sign-in-user
        method: POST

checkSession:
  handler: lambdas/endpoints/users.checkSession
  events:
    - httpApi:
        path: /check-session
        method: POST

signOut:
  handler: lambdas/endpoints/users.signOut
  events:
    - httpApi:
        path: /sign-out-user
        method: POST

getUser:
  handler: lambdas/endpoints/users.getUser
  events:
    - httpApi:
        path: /get-user/{id}
        method: GET
